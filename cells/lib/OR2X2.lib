library (ls05_stdcells) {
  capacitive_load_unit (1.0, pf);
  current_unit: "1uA";
  default_operating_conditions: typical;
  delay_model: table_lookup;
  in_place_swap_mode: match_footprint;
  input_threshold_pct_fall: 50.0;
  input_threshold_pct_rise: 50.0;
  leakage_power_unit: "1nW";
  nom_process: 1.0;
  nom_temperature: 25.0;
  nom_voltage: 5.0;
  output_threshold_pct_fall: 50.0;
  output_threshold_pct_rise: 50.0;
  pulling_resistance_unit: "1kohm";
  slew_lower_threshold_pct_fall: 20.0;
  slew_lower_threshold_pct_rise: 20.0;
  slew_upper_threshold_pct_fall: 80.0;
  slew_upper_threshold_pct_rise: 80.0;
  time_unit: "1ns";
  voltage_unit: "1V";
  operating_conditions (typical) {
    process: 1.0;
    temperature: 25.0;
    voltage: 5.0;
  }
  lu_table_template (delay_template_5x1) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    variable_1: input_net_transition;
  }
  lu_table_template (delay_template_5x5) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    variable_1: total_output_net_capacitance;
    variable_2: input_net_transition;
  }
  lu_table_template (delay_template_5x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: total_output_net_capacitance;
    variable_2: input_net_transition;
  }
  lu_table_template (delay_template_6x1) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: input_net_transition;
  }
  lu_table_template (delay_template_6x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: total_output_net_capacitance;
    variable_2: input_net_transition;
  }
  power_lut_template (energy_template_5x5) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    variable_1: total_output_net_capacitance;
    variable_2: input_transition_time;
  }
  power_lut_template (energy_template_5x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: total_output_net_capacitance;
    variable_2: input_transition_time;
  }
  power_lut_template (energy_template_6x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: total_output_net_capacitance;
    variable_2: input_transition_time;
  }
  lu_table_template (hold_template_3x5) {
    index_1 (
      "1000.0, 1001.0, 1002.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    variable_1: related_pin_transition;
    variable_2: constrained_pin_transition;
  }
  lu_table_template (hold_template_3x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: related_pin_transition;
    variable_2: constrained_pin_transition;
  }
  power_lut_template (passive_energy_template_5x1) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    variable_1: input_transition_time;
  }
  power_lut_template (passive_energy_template_6x1) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: input_transition_time;
  }
  lu_table_template (recovery_template_3x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: related_pin_transition;
    variable_2: constrained_pin_transition;
  }
  lu_table_template (recovery_template_6x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: related_pin_transition;
    variable_2: constrained_pin_transition;
  }
  lu_table_template (removal_template_3x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: related_pin_transition;
    variable_2: constrained_pin_transition;
  }
  lu_table_template (setup_template_3x5) {
    index_1 (
      "1000.0, 1001.0, 1002.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    variable_1: related_pin_transition;
    variable_2: constrained_pin_transition;
  }
  lu_table_template (setup_template_3x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: related_pin_transition;
    variable_2: constrained_pin_transition;
  }
  cell (OR2X2) {
    area: 117760.0;
    cell_leakage_power: 0.1173;
    pin (B) {
      capacitance: 0.0037319961544333975;
      direction: input;
      fall_capacitance: 0.003733736230444291;
      rise_capacitance: 0.003730256078422503;
    }
    pin (A) {
      capacitance: 0.0032496020699670455;
      direction: input;
      fall_capacitance: 0.003325511659384749;
      rise_capacitance: 0.0031736924805493417;
    }
    pin (Y) {
      direction: output;
      function: "!(!B&!A)";
      timing () {
        related_pin: "B";
        timing_sense: positive_unate;
        cell_rise (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.103133, 0.078125, 0.034375, -0.096875, -0.171875, -0.256250", \
            "0.407460, 0.333039, 0.262500, 0.121875, 0.050000, -0.021875", \
            "0.832633, 0.725296, 0.614157, 0.428125, 0.346875, 0.271875", \
            "1.576883, 1.452789, 1.290337, 1.031250, 0.921875, 0.825000", \
            "2.111241, 1.979091, 1.796661, 1.485750, 1.362500, 1.250000", \
            "3.179975, 3.040734, 2.831113, 2.440871, 2.284375, 2.146875"
          );
        }
        cell_fall (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.097143, 0.178125, 0.268750, 0.465625, 0.571875, 0.675000", \
            "0.252937, 0.321563, 0.471875, 0.718750, 0.837500, 0.946875", \
            "0.466012, 0.531250, 0.660313, 1.015625, 1.156250, 1.281250", \
            "0.843779, 0.906250, 1.015625, 1.384375, 1.606250, 1.778125", \
            "1.112183, 1.175000, 1.275000, 1.613906, 1.837500, 2.062500", \
            "1.649835, 1.712500, 1.809375, 2.103125, 2.300000, 2.514687"
          );
        }
        rise_transition (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.179939, 0.263344, 0.425000, 0.850000, 1.087500, 1.321875", \
            "0.690521, 0.703508, 0.794622, 1.168750, 1.393750, 1.621875", \
            "1.378125, 1.378421, 1.402595, 1.668750, 1.868750, 2.078125", \
            "2.578125, 2.575313, 2.584087, 2.681494, 2.809375, 2.981250", \
            "3.434375, 3.434375, 3.434161, 3.490870, 3.565625, 3.690625", \
            "5.146875, 5.150000, 5.146738, 5.178371, 5.212500, 5.262500"
          );
        }
        fall_transition (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.115208, 0.176562, 0.337500, 0.734375, 0.978125, 1.228125", \
            "0.419902, 0.440625, 0.553125, 0.962500, 1.190625, 1.400000", \
            "0.834471, 0.840625, 0.915625, 1.233281, 1.446875, 1.690625", \
            "1.558225, 1.560547, 1.596875, 1.837500, 2.009375, 2.196875", \
            "2.078125, 2.080313, 2.100000, 2.300000, 2.453125, 2.625000", \
            "3.118750, 3.118750, 3.121875, 3.259375, 3.384375, 3.528125"
          );
        }
      }
      timing () {
        related_pin: "A";
        timing_sense: positive_unate;
        cell_rise (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.099798, 0.065625, 0.000000, -0.196875, -0.309375, -0.428125", \
            "0.407467, 0.329762, 0.250000, 0.062500, -0.040625, -0.146875", \
            "0.831921, 0.721179, 0.606875, 0.403125, 0.300000, 0.193750", \
            "1.578953, 1.447584, 1.284289, 1.021875, 0.906250, 0.793750", \
            "2.110596, 1.971891, 1.787483, 1.476347, 1.356250, 1.234375", \
            "3.179776, 3.036613, 2.818805, 2.428375, 2.275000, 2.140625"
          );
        }
        cell_fall (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.100818, 0.181250, 0.296875, 0.553125, 0.693750, 0.831250", \
            "0.254189, 0.321563, 0.481250, 0.781250, 0.934375, 1.081250", \
            "0.465540, 0.528125, 0.664063, 1.053125, 1.221875, 1.378125", \
            "0.845287, 0.903125, 1.015625, 1.400000, 1.637500, 1.837500", \
            "1.113503, 1.171875, 1.275000, 1.628125, 1.859375, 2.100000", \
            "1.647578, 1.709375, 1.809375, 2.115625, 2.318750, 2.540937"
          );
        }
        rise_transition (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.181915, 0.260000, 0.431250, 0.890625, 1.162500, 1.443750", \
            "0.690225, 0.705856, 0.798984, 1.196875, 1.446875, 1.703125", \
            "1.375000, 1.380554, 1.421563, 1.696875, 1.903125, 2.131250", \
            "2.575000, 2.576563, 2.590539, 2.734622, 2.871875, 3.043750", \
            "3.434375, 3.434375, 3.437483, 3.547124, 3.646875, 3.771875", \
            "5.150000, 5.150000, 5.150055, 5.206500, 5.275000, 5.362500"
          );
        }
        fall_transition (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.121354, 0.194687, 0.384375, 0.846875, 1.125000, 1.412500", \
            "0.418153, 0.446875, 0.571875, 1.043750, 1.321875, 1.581250", \
            "0.834228, 0.840625, 0.918750, 1.274531, 1.525000, 1.800000", \
            "1.559670, 1.559766, 1.596875, 1.843750, 2.031250, 2.243750", \
            "2.078125, 2.080938, 2.100000, 2.300000, 2.459375, 2.643750", \
            "3.118750, 3.118750, 3.118750, 3.256250, 3.384375, 3.528125"
          );
        }
      }
    }
  }
}