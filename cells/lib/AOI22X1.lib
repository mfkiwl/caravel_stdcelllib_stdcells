library (ls05_stdcells) {
  capacitive_load_unit (1.0, pf);
  current_unit: "1uA";
  default_operating_conditions: typical;
  delay_model: table_lookup;
  in_place_swap_mode: match_footprint;
  input_threshold_pct_fall: 50.0;
  input_threshold_pct_rise: 50.0;
  leakage_power_unit: "1nW";
  nom_process: 1.0;
  nom_temperature: 25.0;
  nom_voltage: 5.0;
  output_threshold_pct_fall: 50.0;
  output_threshold_pct_rise: 50.0;
  pulling_resistance_unit: "1kohm";
  slew_lower_threshold_pct_fall: 20.0;
  slew_lower_threshold_pct_rise: 20.0;
  slew_upper_threshold_pct_fall: 80.0;
  slew_upper_threshold_pct_rise: 80.0;
  time_unit: "1ns";
  voltage_unit: "1V";
  operating_conditions (typical) {
    process: 1.0;
    temperature: 25.0;
    voltage: 5.0;
  }
  lu_table_template (delay_template_5x1) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    variable_1: input_net_transition;
  }
  lu_table_template (delay_template_5x5) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    variable_1: total_output_net_capacitance;
    variable_2: input_net_transition;
  }
  lu_table_template (delay_template_5x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: total_output_net_capacitance;
    variable_2: input_net_transition;
  }
  lu_table_template (delay_template_6x1) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: input_net_transition;
  }
  lu_table_template (delay_template_6x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: total_output_net_capacitance;
    variable_2: input_net_transition;
  }
  power_lut_template (energy_template_5x5) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    variable_1: total_output_net_capacitance;
    variable_2: input_transition_time;
  }
  power_lut_template (energy_template_5x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: total_output_net_capacitance;
    variable_2: input_transition_time;
  }
  power_lut_template (energy_template_6x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: total_output_net_capacitance;
    variable_2: input_transition_time;
  }
  lu_table_template (hold_template_3x5) {
    index_1 (
      "1000.0, 1001.0, 1002.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    variable_1: related_pin_transition;
    variable_2: constrained_pin_transition;
  }
  lu_table_template (hold_template_3x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: related_pin_transition;
    variable_2: constrained_pin_transition;
  }
  power_lut_template (passive_energy_template_5x1) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    variable_1: input_transition_time;
  }
  power_lut_template (passive_energy_template_6x1) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: input_transition_time;
  }
  lu_table_template (recovery_template_3x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: related_pin_transition;
    variable_2: constrained_pin_transition;
  }
  lu_table_template (recovery_template_6x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: related_pin_transition;
    variable_2: constrained_pin_transition;
  }
  lu_table_template (removal_template_3x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: related_pin_transition;
    variable_2: constrained_pin_transition;
  }
  lu_table_template (setup_template_3x5) {
    index_1 (
      "1000.0, 1001.0, 1002.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    variable_1: related_pin_transition;
    variable_2: constrained_pin_transition;
  }
  lu_table_template (setup_template_3x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: related_pin_transition;
    variable_2: constrained_pin_transition;
  }
  cell (AOI22X1) {
    area: 147200.0;
    cell_leakage_power: 0.1173;
    pin (D) {
      capacitance: 0.0031216552943196274;
      direction: input;
      fall_capacitance: 0.003096892264748394;
      rise_capacitance: 0.003146418323890861;
    }
    pin (C) {
      capacitance: 0.003468743286848374;
      direction: input;
      fall_capacitance: 0.003500268128706902;
      rise_capacitance: 0.003437218444989846;
    }
    pin (B) {
      capacitance: 0.0033194243697276093;
      direction: input;
      fall_capacitance: 0.0032673104594040867;
      rise_capacitance: 0.003371538280051132;
    }
    pin (A) {
      capacitance: 0.003635134954766051;
      direction: input;
      fall_capacitance: 0.0036374901097357844;
      rise_capacitance: 0.003632779799796317;
    }
    pin (Y) {
      direction: output;
      function: "!(D&C&!B&!A|D&C&B&!A|!D&!C&B&A|D&!C&B&A|D&C&B&A|!D&C&B&A|D&C&!B&A)";
      timing () {
        related_pin: "D";
        timing_sense: negative_unate;
        cell_rise (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.187663, 0.249560, 0.385417, 0.656250, 0.791667, 0.917708", \
            "0.699025, 0.704240, 0.802760, 1.164583, 1.358333, 1.535417", \
            "1.393829, 1.366711, 1.410471, 1.707292, 1.910417, 2.116667", \
            "2.609498, 2.563811, 2.552449, 2.727083, 2.886458, 3.067344", \
            "3.477349, 3.425440, 3.393163, 3.503125, 3.630208, 3.786458", \
            "5.215987, 5.155989, 5.093252, 5.114583, 5.192708, 5.304167"
          );
        }
        cell_fall (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.113314, 0.119792, 0.091667, -0.030208, -0.104167, -0.184375", \
            "0.449179, 0.415625, 0.437500, 0.415625, 0.373958, 0.320833", \
            "0.903246, 0.844792, 0.819792, 0.882292, 0.880208, 0.857292", \
            "1.700072, 1.630208, 1.554167, 1.553437, 1.603125, 1.635417", \
            "2.270891, 2.194792, 2.100000, 2.035417, 2.067344, 2.118750", \
            "3.408376, 3.327083, 3.213542, 3.060417, 3.040625, 3.055208"
          );
        }
        rise_transition (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.274352, 0.326141, 0.502917, 1.079167, 1.419792, 1.767708", \
            "1.033333, 1.035918, 1.098958, 1.490104, 1.753125, 2.041667", \
            "2.048958, 2.048958, 2.056825, 2.285417, 2.488542, 2.717708", \
            "3.823958, 3.826042, 3.824219, 3.884375, 3.997917, 4.154167", \
            "5.092708, 5.093750, 5.092708, 5.111458, 5.172917, 5.280208", \
            "7.630208, 7.630208, 7.630208, 7.630208, 7.643750, 7.682292"
          );
        }
        fall_transition (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.175130, 0.295182, 0.576042, 1.230208, 1.582292, 1.931250", \
            "0.642031, 0.662500, 0.854167, 1.575000, 1.969792, 2.352083", \
            "1.272917, 1.272813, 1.352083, 1.916667, 2.315625, 2.735417", \
            "2.377083, 2.377083, 2.380208, 2.709375, 3.011458, 3.355208", \
            "3.164583, 3.165625, 3.164271, 3.364583, 3.610417, 3.905208", \
            "4.742708, 4.742708, 4.742708, 4.796875, 4.942708, 5.153125"
          );
        }
      }
      timing () {
        related_pin: "C";
        timing_sense: negative_unate;
        cell_rise (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.193096, 0.261403, 0.411458, 0.733333, 0.896875, 1.051042", \
            "0.704409, 0.710884, 0.818802, 1.213542, 1.432292, 1.635417", \
            "1.398502, 1.373735, 1.422972, 1.745964, 1.965104, 2.190625", \
            "2.613249, 2.567269, 2.561823, 2.756250, 2.928125, 3.123958", \
            "3.482110, 3.428939, 3.399413, 3.528125, 3.665625, 3.836458", \
            "5.218682, 5.159488, 5.099501, 5.134375, 5.219792, 5.343750"
          );
        }
        cell_fall (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.129463, 0.143750, 0.117708, -0.034375, -0.131250, -0.235417", \
            "0.470529, 0.478125, 0.509375, 0.505208, 0.461458, 0.401042", \
            "0.924740, 0.931250, 0.950000, 1.028125, 1.039583, 1.028125", \
            "1.720600, 1.726042, 1.737500, 1.798958, 1.848958, 1.895833", \
            "2.291120, 2.293750, 2.302083, 2.354167, 2.392708, 2.443620", \
            "3.429355, 3.429167, 3.432292, 3.473958, 3.502083, 3.538542"
          );
        }
        rise_transition (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.283424, 0.333144, 0.498542, 1.010417, 1.281250, 1.546875", \
            "1.042708, 1.044589, 1.104167, 1.473385, 1.721875, 1.991667", \
            "2.058333, 2.057292, 2.065029, 2.279167, 2.473958, 2.692708", \
            "3.835417, 3.833333, 3.834844, 3.889583, 3.995833, 4.143750", \
            "5.103125, 5.103125, 5.101042, 5.119792, 5.175000, 5.276042", \
            "7.640625, 7.639583, 7.639583, 7.638542, 7.653125, 7.685417"
          );
        }
        fall_transition (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.172704, 0.241719, 0.454167, 0.954167, 1.221875, 1.486458", \
            "0.642486, 0.646875, 0.741667, 1.256250, 1.558333, 1.851042", \
            "1.271875, 1.272656, 1.294792, 1.608333, 1.879167, 2.193750", \
            "2.377083, 2.376042, 2.377813, 2.496875, 2.656250, 2.860417", \
            "3.164583, 3.164583, 3.164583, 3.216667, 3.326042, 3.479167", \
            "4.742708, 4.742708, 4.742708, 4.746875, 4.783333, 4.865625"
          );
        }
      }
      timing () {
        related_pin: "B";
        timing_sense: negative_unate;
        cell_rise (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.202844, 0.261924, 0.383333, 0.609375, 0.714583, 0.810417", \
            "0.722485, 0.747232, 0.844792, 1.175000, 1.347917, 1.502083", \
            "1.416600, 1.429584, 1.498958, 1.777448, 1.960833, 2.150000", \
            "2.635338, 2.636674, 2.677083, 2.886458, 3.038542, 3.204167", \
            "3.504556, 3.502787, 3.533333, 3.708333, 3.838542, 3.990625", \
            "5.246138, 5.239849, 5.253125, 5.381250, 5.485417, 5.608333"
          );
        }
        cell_fall (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.120809, 0.134375, 0.127083, 0.064583, 0.023958, -0.023958", \
            "0.456473, 0.422917, 0.455208, 0.483333, 0.471875, 0.448958", \
            "0.909497, 0.853125, 0.832292, 0.927083, 0.951042, 0.956250", \
            "1.706323, 1.636458, 1.562500, 1.580885, 1.646875, 1.698958", \
            "2.276100, 2.202083, 2.107292, 2.056250, 2.100677, 2.168750", \
            "3.414627, 3.334375, 3.220833, 3.077083, 3.065625, 3.090625"
          );
        }
        rise_transition (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.275087, 0.299478, 0.420052, 0.902083, 1.205208, 1.515625", \
            "1.030208, 1.030313, 1.051042, 1.283177, 1.469062, 1.687500", \
            "2.036458, 2.037500, 2.037083, 2.132292, 2.248958, 2.390625", \
            "3.802083, 3.801042, 3.800000, 3.810417, 3.850000, 3.923958", \
            "5.061458, 5.061458, 5.061458, 5.061406, 5.075000, 5.109375", \
            "7.582292, 7.581250, 7.582292, 7.581250, 7.581771, 7.586979"
          );
        }
        fall_transition (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.184193, 0.306641, 0.596875, 1.267708, 1.625000, 1.972917", \
            "0.652656, 0.672917, 0.870833, 1.616667, 2.019792, 2.411458", \
            "1.283333, 1.283854, 1.363542, 1.951042, 2.364583, 2.800000", \
            "2.388542, 2.387500, 2.392708, 2.730208, 3.045833, 3.403125", \
            "3.176042, 3.176042, 3.176146, 3.379167, 3.633333, 3.941667", \
            "4.753125, 4.753125, 4.753125, 4.806250, 4.956250, 5.173958"
          );
        }
      }
      timing () {
        related_pin: "A";
        timing_sense: negative_unate;
        cell_rise (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.207211, 0.273001, 0.407292, 0.681250, 0.816667, 0.940625", \
            "0.726542, 0.754540, 0.859375, 1.215625, 1.413542, 1.590625", \
            "1.419749, 1.433605, 1.507292, 1.807656, 2.005312, 2.210417", \
            "2.639525, 2.641712, 2.684375, 2.907292, 3.068750, 3.247917", \
            "3.509780, 3.507620, 3.539583, 3.723958, 3.864583, 4.026042", \
            "5.250319, 5.244197, 5.259375, 5.393750, 5.505208, 5.636458"
          );
        }
        cell_fall (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.137177, 0.155208, 0.144792, 0.042708, -0.023958, -0.100000", \
            "0.475639, 0.486458, 0.522917, 0.555208, 0.537500, 0.498958", \
            "0.931090, 0.938542, 0.960417, 1.061458, 1.092708, 1.102083", \
            "1.728092, 1.731250, 1.744792, 1.819792, 1.880208, 1.941667", \
            "2.297921, 2.298958, 2.309375, 2.369792, 2.418750, 2.479688", \
            "3.437544, 3.434375, 3.439583, 3.485417, 3.520833, 3.563542"
          );
        }
        rise_transition (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.283571, 0.307988, 0.423125, 0.844792, 1.069792, 1.294792", \
            "1.038542, 1.038646, 1.059375, 1.284375, 1.462500, 1.670833", \
            "2.046875, 2.046875, 2.046875, 2.137500, 2.248958, 2.385417", \
            "3.810417, 3.811458, 3.810417, 3.820833, 3.856250, 3.923958", \
            "5.070833, 5.070833, 5.069792, 5.072917, 5.080208, 5.113542", \
            "7.591667, 7.590625, 7.590625, 7.590625, 7.590104, 7.593333"
          );
        }
        fall_transition (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.181860, 0.252396, 0.469792, 0.981250, 1.251042, 1.512500", \
            "0.652829, 0.657292, 0.753125, 1.283333, 1.589583, 1.885417", \
            "1.282292, 1.284219, 1.303125, 1.628125, 1.910417, 2.234375", \
            "2.387500, 2.387500, 2.388646, 2.508333, 2.673958, 2.885417", \
            "3.176042, 3.177083, 3.175000, 3.227083, 3.337500, 3.495833", \
            "4.753125, 4.753125, 4.753125, 4.756250, 4.793750, 4.876042"
          );
        }
      }
    }
  }
}