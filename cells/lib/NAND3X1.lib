library (ls05_stdcells) {
  capacitive_load_unit (1.0, pf);
  current_unit: "1uA";
  default_operating_conditions: typical;
  delay_model: table_lookup;
  in_place_swap_mode: match_footprint;
  input_threshold_pct_fall: 50.0;
  input_threshold_pct_rise: 50.0;
  leakage_power_unit: "1nW";
  nom_process: 1.0;
  nom_temperature: 25.0;
  nom_voltage: 5.0;
  output_threshold_pct_fall: 50.0;
  output_threshold_pct_rise: 50.0;
  pulling_resistance_unit: "1kohm";
  slew_lower_threshold_pct_fall: 20.0;
  slew_lower_threshold_pct_rise: 20.0;
  slew_upper_threshold_pct_fall: 80.0;
  slew_upper_threshold_pct_rise: 80.0;
  time_unit: "1ns";
  voltage_unit: "1V";
  operating_conditions (typical) {
    process: 1.0;
    temperature: 25.0;
    voltage: 5.0;
  }
  lu_table_template (delay_template_5x1) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    variable_1: input_net_transition;
  }
  lu_table_template (delay_template_5x5) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    variable_1: total_output_net_capacitance;
    variable_2: input_net_transition;
  }
  lu_table_template (delay_template_5x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: total_output_net_capacitance;
    variable_2: input_net_transition;
  }
  lu_table_template (delay_template_6x1) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: input_net_transition;
  }
  lu_table_template (delay_template_6x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: total_output_net_capacitance;
    variable_2: input_net_transition;
  }
  power_lut_template (energy_template_5x5) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    variable_1: total_output_net_capacitance;
    variable_2: input_transition_time;
  }
  power_lut_template (energy_template_5x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: total_output_net_capacitance;
    variable_2: input_transition_time;
  }
  power_lut_template (energy_template_6x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: total_output_net_capacitance;
    variable_2: input_transition_time;
  }
  lu_table_template (hold_template_3x5) {
    index_1 (
      "1000.0, 1001.0, 1002.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    variable_1: related_pin_transition;
    variable_2: constrained_pin_transition;
  }
  lu_table_template (hold_template_3x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: related_pin_transition;
    variable_2: constrained_pin_transition;
  }
  power_lut_template (passive_energy_template_5x1) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    variable_1: input_transition_time;
  }
  power_lut_template (passive_energy_template_6x1) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: input_transition_time;
  }
  lu_table_template (recovery_template_3x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: related_pin_transition;
    variable_2: constrained_pin_transition;
  }
  lu_table_template (recovery_template_6x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: related_pin_transition;
    variable_2: constrained_pin_transition;
  }
  lu_table_template (removal_template_3x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: related_pin_transition;
    variable_2: constrained_pin_transition;
  }
  lu_table_template (setup_template_3x5) {
    index_1 (
      "1000.0, 1001.0, 1002.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    variable_1: related_pin_transition;
    variable_2: constrained_pin_transition;
  }
  lu_table_template (setup_template_3x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: related_pin_transition;
    variable_2: constrained_pin_transition;
  }
  cell (NAND3X1) {
    area: 117760.0;
    cell_leakage_power: 0.1173;
    pin (C) {
      capacitance: 0.0028467922910391744;
      direction: input;
      fall_capacitance: 0.0027269611587070752;
      rise_capacitance: 0.0029666234233712736;
    }
    pin (B) {
      capacitance: 0.003211075898163364;
      direction: input;
      fall_capacitance: 0.00309839952981974;
      rise_capacitance: 0.0033237522665069876;
    }
    pin (A) {
      capacitance: 0.0035319056405848947;
      direction: input;
      fall_capacitance: 0.003533159899634642;
      rise_capacitance: 0.0035306513815351473;
    }
    pin (Y) {
      direction: output;
      function: "!(C&B&A)";
      timing () {
        related_pin: "C";
        timing_sense: negative_unate;
        cell_rise (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.103230, 0.153125, 0.209375, 0.290625, 0.328125, 0.356250", \
            "0.406492, 0.397007, 0.490625, 0.681250, 0.759375, 0.825000", \
            "0.833384, 0.773458, 0.807565, 1.059375, 1.171875, 1.271875", \
            "1.578848, 1.483483, 1.436252, 1.605469, 1.753125, 1.896875", \
            "2.109385, 2.005113, 1.920218, 2.009375, 2.137500, 2.287500", \
            "3.178992, 3.065100, 2.925000, 2.887500, 2.956250, 3.068750"
          );
        }
        cell_fall (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.151111, 0.184375, 0.234375, 0.293750, 0.315625, 0.331250", \
            "0.579424, 0.562500, 0.616563, 0.787500, 0.856250, 0.909375", \
            "1.157492, 1.118750, 1.121875, 1.293750, 1.400000, 1.490625", \
            "2.169964, 2.118750, 2.078125, 2.137500, 2.228125, 2.340625", \
            "2.894955, 2.840625, 2.781250, 2.784375, 2.846875, 2.934375", \
            "4.344947, 4.281250, 4.203125, 4.134375, 4.150000, 4.196875"
          );
        }
        rise_transition (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.191609, 0.352312, 0.703125, 1.550000, 2.009375, 2.465625", \
            "0.693785, 0.750132, 1.016725, 1.896875, 2.406250, 2.903125", \
            "1.378125, 1.389083, 1.557565, 2.300000, 2.773594, 3.278125", \
            "2.581250, 2.578594, 2.630002, 3.181250, 3.581250, 4.015625", \
            "3.437500, 3.437500, 3.451468, 3.878125, 4.237500, 4.634375", \
            "5.153125, 5.153125, 5.152188, 5.381250, 5.656250, 5.987500"
          );
        }
        fall_transition (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.217813, 0.297812, 0.553125, 1.362500, 1.837500, 2.309375", \
            "0.818750, 0.821875, 0.931250, 1.481250, 1.881250, 2.290625", \
            "1.625000, 1.628125, 1.646875, 2.000000, 2.284375, 2.604687", \
            "3.040625, 3.040625, 3.037500, 3.165625, 3.350000, 3.581250", \
            "4.050000, 4.046875, 4.046875, 4.093750, 4.218750, 4.396875", \
            "6.068750, 6.065625, 6.065625, 6.065625, 6.096875, 6.187500"
          );
        }
      }
      timing () {
        related_pin: "B";
        timing_sense: negative_unate;
        cell_rise (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.106501, 0.162500, 0.234375, 0.365625, 0.428125, 0.481250", \
            "0.411867, 0.403891, 0.506250, 0.737500, 0.840625, 0.931250", \
            "0.837382, 0.777383, 0.819762, 1.100000, 1.234375, 1.356250", \
            "1.580771, 1.487503, 1.445463, 1.634375, 1.796875, 1.956250", \
            "2.111294, 2.011753, 1.929265, 2.034375, 2.171875, 2.337500", \
            "3.182584, 3.066018, 2.931250, 2.906250, 2.987500, 3.109375"
          );
        }
        cell_fall (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.162541, 0.200000, 0.246875, 0.281250, 0.287500, 0.281250", \
            "0.594556, 0.603125, 0.660313, 0.828125, 0.893750, 0.940625", \
            "1.176002, 1.175000, 1.206250, 1.371875, 1.478125, 1.568750", \
            "2.188603, 2.181250, 2.193750, 2.300000, 2.390625, 2.493359", \
            "2.913633, 2.906250, 2.906250, 2.987500, 3.062500, 3.150000", \
            "4.363663, 4.350000, 4.343750, 4.390625, 4.440625, 4.506250"
          );
        }
        rise_transition (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.194697, 0.360699, 0.721875, 1.540625, 1.971875, 2.393750", \
            "0.702730, 0.760141, 1.032090, 1.931250, 2.450000, 2.943750", \
            "1.387500, 1.393008, 1.566637, 2.328125, 2.815625, 3.325000", \
            "2.584375, 2.587969, 2.639213, 3.203125, 3.615625, 4.065625", \
            "3.446875, 3.443750, 3.457390, 3.896875, 4.268750, 4.675000", \
            "5.159375, 5.159375, 5.157813, 5.390625, 5.678125, 6.018750"
          );
        }
        fall_transition (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.215410, 0.261562, 0.450000, 1.112500, 1.515625, 1.921875", \
            "0.821875, 0.822266, 0.871875, 1.231250, 1.525000, 1.843750", \
            "1.628125, 1.628125, 1.631250, 1.812500, 1.990625, 2.201562", \
            "3.040625, 3.040625, 3.037500, 3.081250, 3.168750, 3.296875", \
            "4.050000, 4.046875, 4.046875, 4.056250, 4.100000, 4.184375", \
            "6.065625, 6.065625, 6.065625, 6.065625, 6.068750, 6.093750"
          );
        }
      }
      timing () {
        related_pin: "A";
        timing_sense: negative_unate;
        cell_rise (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.110971, 0.171875, 0.265625, 0.446875, 0.534375, 0.615625", \
            "0.416702, 0.412326, 0.521875, 0.800000, 0.931250, 1.046875", \
            "0.837727, 0.782717, 0.832029, 1.143750, 1.306250, 1.453125", \
            "1.585548, 1.492846, 1.454974, 1.662500, 1.840625, 2.025000", \
            "2.119136, 2.014000, 1.935253, 2.062500, 2.212500, 2.390625", \
            "3.188091, 3.071370, 2.940625, 2.928125, 3.018750, 3.153125"
          );
        }
        cell_fall (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.163365, 0.184375, 0.209375, 0.190625, 0.165625, 0.131250", \
            "0.595259, 0.590625, 0.624063, 0.734375, 0.765625, 0.781250", \
            "1.172677, 1.162500, 1.171875, 1.284375, 1.359375, 1.412500", \
            "2.189244, 2.168750, 2.156250, 2.209375, 2.268750, 2.343750", \
            "2.913569, 2.890625, 2.871875, 2.893750, 2.937500, 2.996875", \
            "4.362686, 4.334375, 4.306250, 4.296875, 4.312500, 4.353125"
          );
        }
        rise_transition (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.201447, 0.370414, 0.740625, 1.593750, 2.043750, 2.484375", \
            "0.706750, 0.765451, 1.047527, 1.968750, 2.503125, 3.015625", \
            "1.393750, 1.398342, 1.582029, 2.365625, 2.862500, 3.384375", \
            "2.593750, 2.594531, 2.645599, 3.231250, 3.656250, 4.115625", \
            "3.450000, 3.450000, 3.463378, 3.921875, 4.300000, 4.725000", \
            "5.165625, 5.165625, 5.163438, 5.403125, 5.700000, 6.056250"
          );
        }
        fall_transition (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.216286, 0.259687, 0.456250, 1.162500, 1.581250, 2.000000", \
            "0.818750, 0.821484, 0.871875, 1.240625, 1.559375, 1.893750", \
            "1.628125, 1.625000, 1.631250, 1.812500, 1.990625, 2.206250", \
            "3.037500, 3.040625, 3.040625, 3.081250, 3.175000, 3.303125", \
            "4.046875, 4.050000, 4.046875, 4.059375, 4.109375, 4.196875", \
            "6.065625, 6.065625, 6.065625, 6.064219, 6.071875, 6.100000"
          );
        }
      }
    }
  }
}