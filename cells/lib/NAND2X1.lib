library (ls05_stdcells) {
  capacitive_load_unit (1.0, pf);
  current_unit: "1uA";
  default_operating_conditions: typical;
  delay_model: table_lookup;
  in_place_swap_mode: match_footprint;
  input_threshold_pct_fall: 50.0;
  input_threshold_pct_rise: 50.0;
  leakage_power_unit: "1nW";
  nom_process: 1.0;
  nom_temperature: 25.0;
  nom_voltage: 5.0;
  output_threshold_pct_fall: 50.0;
  output_threshold_pct_rise: 50.0;
  pulling_resistance_unit: "1kohm";
  slew_lower_threshold_pct_fall: 20.0;
  slew_lower_threshold_pct_rise: 20.0;
  slew_upper_threshold_pct_fall: 80.0;
  slew_upper_threshold_pct_rise: 80.0;
  time_unit: "1ns";
  voltage_unit: "1V";
  operating_conditions (typical) {
    process: 1.0;
    temperature: 25.0;
    voltage: 5.0;
  }
  lu_table_template (delay_template_5x1) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    variable_1: input_net_transition;
  }
  lu_table_template (delay_template_5x5) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    variable_1: total_output_net_capacitance;
    variable_2: input_net_transition;
  }
  lu_table_template (delay_template_5x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: total_output_net_capacitance;
    variable_2: input_net_transition;
  }
  lu_table_template (delay_template_6x1) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: input_net_transition;
  }
  lu_table_template (delay_template_6x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: total_output_net_capacitance;
    variable_2: input_net_transition;
  }
  power_lut_template (energy_template_5x5) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    variable_1: total_output_net_capacitance;
    variable_2: input_transition_time;
  }
  power_lut_template (energy_template_5x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: total_output_net_capacitance;
    variable_2: input_transition_time;
  }
  power_lut_template (energy_template_6x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: total_output_net_capacitance;
    variable_2: input_transition_time;
  }
  lu_table_template (hold_template_3x5) {
    index_1 (
      "1000.0, 1001.0, 1002.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    variable_1: related_pin_transition;
    variable_2: constrained_pin_transition;
  }
  lu_table_template (hold_template_3x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: related_pin_transition;
    variable_2: constrained_pin_transition;
  }
  power_lut_template (passive_energy_template_5x1) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    variable_1: input_transition_time;
  }
  power_lut_template (passive_energy_template_6x1) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: input_transition_time;
  }
  lu_table_template (recovery_template_3x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: related_pin_transition;
    variable_2: constrained_pin_transition;
  }
  lu_table_template (recovery_template_6x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: related_pin_transition;
    variable_2: constrained_pin_transition;
  }
  lu_table_template (removal_template_3x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: related_pin_transition;
    variable_2: constrained_pin_transition;
  }
  lu_table_template (setup_template_3x5) {
    index_1 (
      "1000.0, 1001.0, 1002.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    variable_1: related_pin_transition;
    variable_2: constrained_pin_transition;
  }
  lu_table_template (setup_template_3x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: related_pin_transition;
    variable_2: constrained_pin_transition;
  }
  cell (NAND2X1) {
    area: 88320.0;
    cell_leakage_power: 0.1173;
    pin (B) {
      capacitance: 0.003291959040064248;
      direction: input;
      fall_capacitance: 0.0032206897025659326;
      rise_capacitance: 0.0033632283775625635;
    }
    pin (A) {
      capacitance: 0.0037726677034163234;
      direction: input;
      fall_capacitance: 0.0037739447849558607;
      rise_capacitance: 0.003771390621876786;
    }
    pin (Y) {
      direction: output;
      function: "!(B&A)";
      timing () {
        related_pin: "B";
        timing_sense: negative_unate;
        cell_rise (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.103393, 0.162500, 0.240625, 0.384375, 0.453125, 0.512500", \
            "0.407685, 0.403735, 0.512500, 0.759375, 0.871875, 0.968750", \
            "0.830581, 0.777588, 0.826451, 1.118750, 1.265625, 1.396875", \
            "1.576963, 1.485311, 1.454506, 1.656250, 1.825000, 1.993750", \
            "2.111195, 2.006829, 1.935661, 2.059375, 2.203125, 2.371875", \
            "3.179415, 3.062690, 2.942071, 2.931250, 3.021875, 3.150000"
          );
        }
        cell_fall (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.112046, 0.134375, 0.143750, 0.121875, 0.103125, 0.078125", \
            "0.448137, 0.421875, 0.465625, 0.537500, 0.553125, 0.556250", \
            "0.901163, 0.850000, 0.840625, 0.968750, 1.018750, 1.050000", \
            "1.697989, 1.631250, 1.571875, 1.616719, 1.700000, 1.775000", \
            "2.266724, 2.196875, 2.115625, 2.093750, 2.153125, 2.237500", \
            "3.404210, 3.328125, 3.225000, 3.112500, 3.118750, 3.159375"
          );
        }
        rise_transition (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.188788, 0.346121, 0.690625, 1.575000, 2.078125, 2.581250", \
            "0.690937, 0.747485, 1.000893, 1.850000, 2.356250, 2.856250", \
            "1.378125, 1.383838, 1.545201, 2.259375, 2.718750, 3.200000", \
            "2.578125, 2.578906, 2.626381, 3.150000, 3.537500, 3.956250", \
            "3.434375, 3.434375, 3.445036, 3.853125, 4.200000, 4.584375", \
            "5.150000, 5.150000, 5.151094, 5.359375, 5.625000, 5.943750"
          );
        }
        fall_transition (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.173047, 0.286328, 0.593750, 1.478125, 1.984375, 2.490625", \
            "0.638906, 0.656250, 0.834375, 1.571875, 2.015625, 2.468750", \
            "1.268750, 1.269687, 1.337500, 1.871875, 2.259375, 2.690625", \
            "2.371875, 2.375000, 2.378125, 2.675000, 2.959375, 3.287500", \
            "3.159375, 3.162500, 3.160781, 3.337500, 3.565625, 3.843750", \
            "4.740625, 4.740625, 4.740625, 4.781250, 4.912500, 5.106250"
          );
        }
      }
      timing () {
        related_pin: "A";
        timing_sense: negative_unate;
        cell_rise (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.106720, 0.175000, 0.275000, 0.468750, 0.568750, 0.659375", \
            "0.411517, 0.411989, 0.531250, 0.828125, 0.968750, 1.093750", \
            "0.833541, 0.782653, 0.841806, 1.168750, 1.343750, 1.503125", \
            "1.583385, 1.491397, 1.463482, 1.690625, 1.878125, 2.068750", \
            "2.115890, 2.015010, 1.946277, 2.090625, 2.253125, 2.437500", \
            "3.184150, 3.065637, 2.947883, 2.959375, 3.065625, 3.206250"
          );
        }
        cell_fall (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.128295, 0.156250, 0.171875, 0.121875, 0.084375, 0.034375", \
            "0.467318, 0.484375, 0.534375, 0.625000, 0.640625, 0.640625", \
            "0.920682, 0.931250, 0.968750, 1.112500, 1.175000, 1.218750", \
            "1.717680, 1.725000, 1.750000, 1.862500, 1.943750, 2.031250", \
            "2.289592, 2.293750, 2.312500, 2.409375, 2.478125, 2.559687", \
            "3.427129, 3.428125, 3.440625, 3.518750, 3.575000, 3.640625"
          );
        }
        rise_transition (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.193231, 0.353294, 0.700000, 1.500000, 1.918750, 2.328125", \
            "0.699581, 0.752614, 1.016250, 1.878125, 2.384375, 2.875000", \
            "1.384375, 1.392028, 1.554306, 2.287500, 2.750000, 3.240625", \
            "2.587500, 2.585469, 2.629107, 3.168750, 3.568750, 4.000000", \
            "3.443750, 3.443750, 3.449402, 3.868750, 4.221875, 4.618750", \
            "5.159375, 5.159375, 5.157969, 5.365625, 5.637500, 5.962500"
          );
        }
        fall_transition (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.167327, 0.229062, 0.443750, 1.118750, 1.521875, 1.928125", \
            "0.640133, 0.643750, 0.725000, 1.187500, 1.500000, 1.821875", \
            "1.271875, 1.269844, 1.284375, 1.550000, 1.781250, 2.062500", \
            "2.375000, 2.371875, 2.372188, 2.471875, 2.606250, 2.778125", \
            "3.162500, 3.162500, 3.162500, 3.200000, 3.293750, 3.425000", \
            "4.737500, 4.740625, 4.737500, 4.740625, 4.768750, 4.837500"
          );
        }
      }
    }
  }
}