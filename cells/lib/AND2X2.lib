library (ls05_stdcells) {
  capacitive_load_unit (1.0, pf);
  current_unit: "1uA";
  default_operating_conditions: typical;
  delay_model: table_lookup;
  in_place_swap_mode: match_footprint;
  input_threshold_pct_fall: 50.0;
  input_threshold_pct_rise: 50.0;
  leakage_power_unit: "1nW";
  nom_process: 1.0;
  nom_temperature: 25.0;
  nom_voltage: 5.0;
  output_threshold_pct_fall: 50.0;
  output_threshold_pct_rise: 50.0;
  pulling_resistance_unit: "1kohm";
  slew_lower_threshold_pct_fall: 20.0;
  slew_lower_threshold_pct_rise: 20.0;
  slew_upper_threshold_pct_fall: 80.0;
  slew_upper_threshold_pct_rise: 80.0;
  time_unit: "1ns";
  voltage_unit: "1V";
  operating_conditions (typical) {
    process: 1.0;
    temperature: 25.0;
    voltage: 5.0;
  }
  lu_table_template (delay_template_5x1) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    variable_1: input_net_transition;
  }
  lu_table_template (delay_template_5x5) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    variable_1: total_output_net_capacitance;
    variable_2: input_net_transition;
  }
  lu_table_template (delay_template_5x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: total_output_net_capacitance;
    variable_2: input_net_transition;
  }
  lu_table_template (delay_template_6x1) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: input_net_transition;
  }
  lu_table_template (delay_template_6x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: total_output_net_capacitance;
    variable_2: input_net_transition;
  }
  power_lut_template (energy_template_5x5) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    variable_1: total_output_net_capacitance;
    variable_2: input_transition_time;
  }
  power_lut_template (energy_template_5x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: total_output_net_capacitance;
    variable_2: input_transition_time;
  }
  power_lut_template (energy_template_6x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: total_output_net_capacitance;
    variable_2: input_transition_time;
  }
  lu_table_template (hold_template_3x5) {
    index_1 (
      "1000.0, 1001.0, 1002.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    variable_1: related_pin_transition;
    variable_2: constrained_pin_transition;
  }
  lu_table_template (hold_template_3x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: related_pin_transition;
    variable_2: constrained_pin_transition;
  }
  power_lut_template (passive_energy_template_5x1) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    variable_1: input_transition_time;
  }
  power_lut_template (passive_energy_template_6x1) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: input_transition_time;
  }
  lu_table_template (recovery_template_3x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: related_pin_transition;
    variable_2: constrained_pin_transition;
  }
  lu_table_template (recovery_template_6x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: related_pin_transition;
    variable_2: constrained_pin_transition;
  }
  lu_table_template (removal_template_3x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: related_pin_transition;
    variable_2: constrained_pin_transition;
  }
  lu_table_template (setup_template_3x5) {
    index_1 (
      "1000.0, 1001.0, 1002.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    variable_1: related_pin_transition;
    variable_2: constrained_pin_transition;
  }
  lu_table_template (setup_template_3x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: related_pin_transition;
    variable_2: constrained_pin_transition;
  }
  cell (AND2X2) {
    area: 117760.0;
    cell_leakage_power: 0.1173;
    pin (B) {
      capacitance: 0.003772689936160844;
      direction: input;
      fall_capacitance: 0.003774573030988302;
      rise_capacitance: 0.0037708068413333856;
    }
    pin (A) {
      capacitance: 0.0032920148974962646;
      direction: input;
      fall_capacitance: 0.0032224709398981006;
      rise_capacitance: 0.0033615588550944286;
    }
    pin (Y) {
      direction: output;
      function: "(B&A)";
      timing () {
        related_pin: "B";
        timing_sense: positive_unate;
        cell_rise (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.123376, 0.156250, 0.156250, 0.100000, 0.065625, 0.025000", \
            "0.434978, 0.423437, 0.481250, 0.515625, 0.503125, 0.478125", \
            "0.856192, 0.814040, 0.828125, 0.981250, 1.006250, 1.006250", \
            "1.603350, 1.539025, 1.500000, 1.594219, 1.693750, 1.781250", \
            "2.137054, 2.067145, 2.003125, 2.037500, 2.116719, 2.212500", \
            "3.208343, 3.129640, 3.031250, 2.975000, 3.012500, 3.078125"
          );
        }
        cell_fall (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.076239, 0.118750, 0.178125, 0.293750, 0.359375, 0.421875", \
            "0.228882, 0.247813, 0.303125, 0.443750, 0.518750, 0.590625", \
            "0.445008, 0.446875, 0.484375, 0.612500, 0.690625, 0.765625", \
            "0.819360, 0.815625, 0.821875, 0.931250, 1.000000, 1.068750", \
            "1.087966, 1.081250, 1.075000, 1.165625, 1.231250, 1.296875", \
            "1.630483, 1.618750, 1.600000, 1.637500, 1.700000, 1.762500"
          );
        }
        rise_transition (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.179066, 0.252549, 0.493750, 1.268750, 1.696875, 2.128125", \
            "0.690850, 0.714062, 0.840625, 1.350000, 1.740625, 2.159375", \
            "1.375000, 1.379665, 1.459375, 1.831250, 2.081250, 2.378125", \
            "2.578125, 2.578125, 2.593750, 2.881250, 3.084375, 3.306250", \
            "3.434375, 3.434375, 3.434375, 3.659375, 3.843750, 4.050000", \
            "5.150000, 5.146875, 5.146875, 5.253125, 5.403125, 5.581250"
          );
        }
        fall_transition (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.128581, 0.293750, 0.609375, 1.381250, 1.809375, 2.234375", \
            "0.420092, 0.493750, 0.762500, 1.537500, 1.965625, 2.396875", \
            "0.833968, 0.853125, 1.037500, 1.750000, 2.175000, 2.606250", \
            "1.558132, 1.562500, 1.631250, 2.184375, 2.575000, 2.987500", \
            "2.078125, 2.078125, 2.115625, 2.550000, 2.903125, 3.287187", \
            "3.115625, 3.120313, 3.128125, 3.368750, 3.653125, 3.978125"
          );
        }
      }
      timing () {
        related_pin: "A";
        timing_sense: positive_unate;
        cell_rise (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.116654, 0.156250, 0.178125, 0.181250, 0.178125, 0.171875", \
            "0.422435, 0.410515, 0.484375, 0.578125, 0.600000, 0.609375", \
            "0.846742, 0.794261, 0.817992, 1.003125, 1.065625, 1.103125", \
            "1.592569, 1.514226, 1.471125, 1.585781, 1.703125, 1.812500", \
            "2.129072, 2.039580, 1.964877, 2.015625, 2.108281, 2.221875", \
            "3.197275, 3.099312, 2.983630, 2.928125, 2.975000, 3.053125"
          );
        }
        cell_fall (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.072794, 0.103125, 0.137500, 0.196875, 0.231250, 0.259375", \
            "0.227273, 0.242578, 0.290625, 0.368750, 0.409375, 0.446875", \
            "0.441474, 0.440625, 0.484375, 0.584375, 0.628125, 0.668750", \
            "0.819060, 0.806250, 0.815625, 0.950000, 1.003125, 1.046875", \
            "1.087703, 1.071875, 1.065625, 1.187500, 1.259375, 1.312500", \
            "1.628239, 1.609375, 1.587500, 1.643750, 1.725000, 1.806250"
          );
        }
        rise_transition (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.180405, 0.274711, 0.531250, 1.340625, 1.790625, 2.237500", \
            "0.691084, 0.719890, 0.864850, 1.421875, 1.825000, 2.259375", \
            "1.375000, 1.378636, 1.474242, 1.881250, 2.157422, 2.481250", \
            "2.578125, 2.578125, 2.599250, 2.915625, 3.137500, 3.371875", \
            "3.434375, 3.434375, 3.436752, 3.687500, 3.890625, 4.106250", \
            "5.150000, 5.150000, 5.149531, 5.278125, 5.440625, 5.634375"
          );
        }
        fall_transition (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.127109, 0.293750, 0.612500, 1.375000, 1.812500, 2.253125", \
            "0.419153, 0.493750, 0.773828, 1.596875, 2.034375, 2.465625", \
            "0.832222, 0.859375, 1.050000, 1.806250, 2.275000, 2.728125", \
            "1.558085, 1.562500, 1.650000, 2.234375, 2.644687, 3.087500", \
            "2.078125, 2.078125, 2.134375, 2.603125, 2.975000, 3.381250", \
            "3.118750, 3.118438, 3.137500, 3.425000, 3.728125, 4.071875"
          );
        }
      }
    }
  }
}