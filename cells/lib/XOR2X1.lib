library (ls05_stdcells) {
  capacitive_load_unit (1.0, pf);
  current_unit: "1uA";
  default_operating_conditions: typical;
  delay_model: table_lookup;
  in_place_swap_mode: match_footprint;
  input_threshold_pct_fall: 50.0;
  input_threshold_pct_rise: 50.0;
  leakage_power_unit: "1nW";
  nom_process: 1.0;
  nom_temperature: 25.0;
  nom_voltage: 5.0;
  output_threshold_pct_fall: 50.0;
  output_threshold_pct_rise: 50.0;
  pulling_resistance_unit: "1kohm";
  slew_lower_threshold_pct_fall: 20.0;
  slew_lower_threshold_pct_rise: 20.0;
  slew_upper_threshold_pct_fall: 80.0;
  slew_upper_threshold_pct_rise: 80.0;
  time_unit: "1ns";
  voltage_unit: "1V";
  operating_conditions (typical) {
    process: 1.0;
    temperature: 25.0;
    voltage: 5.0;
  }
  lu_table_template (delay_template_5x1) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    variable_1: input_net_transition;
  }
  lu_table_template (delay_template_5x5) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    variable_1: total_output_net_capacitance;
    variable_2: input_net_transition;
  }
  lu_table_template (delay_template_5x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: total_output_net_capacitance;
    variable_2: input_net_transition;
  }
  lu_table_template (delay_template_6x1) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: input_net_transition;
  }
  lu_table_template (delay_template_6x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: total_output_net_capacitance;
    variable_2: input_net_transition;
  }
  power_lut_template (energy_template_5x5) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    variable_1: total_output_net_capacitance;
    variable_2: input_transition_time;
  }
  power_lut_template (energy_template_5x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: total_output_net_capacitance;
    variable_2: input_transition_time;
  }
  power_lut_template (energy_template_6x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: total_output_net_capacitance;
    variable_2: input_transition_time;
  }
  lu_table_template (hold_template_3x5) {
    index_1 (
      "1000.0, 1001.0, 1002.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    variable_1: related_pin_transition;
    variable_2: constrained_pin_transition;
  }
  lu_table_template (hold_template_3x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: related_pin_transition;
    variable_2: constrained_pin_transition;
  }
  power_lut_template (passive_energy_template_5x1) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    variable_1: input_transition_time;
  }
  power_lut_template (passive_energy_template_6x1) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: input_transition_time;
  }
  lu_table_template (recovery_template_3x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: related_pin_transition;
    variable_2: constrained_pin_transition;
  }
  lu_table_template (recovery_template_6x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: related_pin_transition;
    variable_2: constrained_pin_transition;
  }
  lu_table_template (removal_template_3x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: related_pin_transition;
    variable_2: constrained_pin_transition;
  }
  lu_table_template (setup_template_3x5) {
    index_1 (
      "1000.0, 1001.0, 1002.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    variable_1: related_pin_transition;
    variable_2: constrained_pin_transition;
  }
  lu_table_template (setup_template_3x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: related_pin_transition;
    variable_2: constrained_pin_transition;
  }
  cell (XOR2X1) {
    area: 206080.0;
    cell_leakage_power: 0.1173;
    pin (B) {
      capacitance: 0.007869569892804584;
      direction: input;
      fall_capacitance: 0.0078717124866573;
      rise_capacitance: 0.007867427298951866;
    }
    pin (A) {
      capacitance: 0.006181907749026933;
      direction: input;
      fall_capacitance: 0.006286296471778679;
      rise_capacitance: 0.006077519026275186;
    }
    pin (Y) {
      direction: output;
      function: "!(!B&!A|B&A)";
      timing () {
        related_pin: "B";
        timing_sense: non_unate;
        cell_rise (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.217081, 0.255121, 0.337500, 0.462500, 0.520313, 0.565625", \
            "0.776656, 0.781949, 0.837500, 1.065625, 1.179688, 1.273438", \
            "1.526735, 1.515748, 1.546875, 1.720781, 1.847266, 1.981250", \
            "2.840816, 2.822444, 2.825000, 2.928125, 3.018750, 3.126562", \
            "3.779914, 3.758519, 3.751563, 3.818750, 3.890625, 3.982812", \
            "5.658047, 5.632069, 5.609375, 5.635937, 5.681250, 5.743750"
          );
        }
        cell_fall (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.140769, 0.176563, 0.203125, 0.210938, 0.210938, 0.204688", \
            "0.480561, 0.504688, 0.566094, 0.681250, 0.709375, 0.725000", \
            "0.935940, 0.956250, 1.004687, 1.173438, 1.251563, 1.303125", \
            "1.727519, 1.747507, 1.787500, 1.925000, 2.018750, 2.118750", \
            "2.302397, 2.307813, 2.350000, 2.475000, 2.556250, 2.650000", \
            "3.431846, 3.451562, 3.481250, 3.579688, 3.660938, 3.739063"
          );
        }
        rise_transition (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.302255, 0.323412, 0.432031, 0.843750, 1.059375, 1.276563", \
            "1.118750, 1.120547, 1.139063, 1.350469, 1.529687, 1.746875", \
            "2.210938, 2.209375, 2.210469, 2.298437, 2.406250, 2.535937", \
            "4.121875, 4.121875, 4.121875, 4.126562, 4.164063, 4.235937", \
            "5.487500, 5.487500, 5.487500, 5.490625, 5.495312, 5.528125", \
            "8.218750, 8.218750, 8.218750, 8.218750, 8.218750, 8.217969"
          );
        }
        fall_transition (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.176350, 0.238125, 0.437500, 0.945313, 1.215625, 1.478125", \
            "0.646875, 0.647852, 0.731250, 1.185938, 1.475000, 1.762500", \
            "1.278125, 1.276953, 1.290625, 1.570312, 1.806250, 2.073438", \
            "2.381250, 2.381250, 2.381094, 2.478125, 2.623437, 2.806250", \
            "3.170313, 3.168750, 3.168750, 3.201563, 3.301563, 3.440625", \
            "4.746875, 4.746875, 4.746875, 4.748594, 4.768750, 4.834375"
          );
        }
      }
      timing () {
        related_pin: "A";
        timing_sense: non_unate;
        cell_rise (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.198525, 0.238877, 0.328125, 0.464063, 0.525000, 0.578125", \
            "0.751866, 0.739759, 0.796875, 1.043750, 1.162500, 1.262500", \
            "1.500565, 1.465686, 1.475000, 1.656836, 1.798594, 1.940625", \
            "2.813265, 2.758788, 2.725000, 2.800000, 2.895312, 3.010937", \
            "3.752400, 3.693659, 3.639063, 3.659375, 3.725000, 3.818750", \
            "5.629033, 5.564455, 5.484375, 5.431250, 5.453125, 5.504687"
          );
        }
        cell_fall (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.119541, 0.145313, 0.156250, 0.148438, 0.143750, 0.131250", \
            "0.454771, 0.434375, 0.485937, 0.550000, 0.560938, 0.564063", \
            "0.908200, 0.870313, 0.868750, 1.004688, 1.046875, 1.070313", \
            "1.700453, 1.653125, 1.606250, 1.662656, 1.746875, 1.831250", \
            "2.273974, 2.210938, 2.153125, 2.148437, 2.208906, 2.295117", \
            "3.403635, 3.350000, 3.268750, 3.175000, 3.193750, 3.239063"
          );
        }
        rise_transition (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.301106, 0.338558, 0.480469, 0.989063, 1.300000, 1.620313", \
            "1.120312, 1.118590, 1.159375, 1.468594, 1.687500, 1.934375", \
            "2.210938, 2.212500, 2.212695, 2.381250, 2.545312, 2.726562", \
            "4.123438, 4.121875, 4.121875, 4.146875, 4.232813, 4.357812", \
            "5.489062, 5.487500, 5.487500, 5.487500, 5.520312, 5.600000", \
            "8.218750, 8.218750, 8.218750, 8.218750, 8.218750, 8.228125"
          );
        }
        fall_transition (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.176095, 0.285586, 0.559375, 1.195313, 1.535938, 1.873438", \
            "0.646195, 0.662500, 0.823438, 1.507813, 1.900000, 2.271875", \
            "1.276563, 1.277813, 1.339063, 1.825000, 2.195469, 2.595313", \
            "2.381250, 2.381250, 2.384961, 2.650000, 2.907812, 3.201562", \
            "3.168750, 3.168750, 3.172031, 3.325000, 3.531250, 3.779687", \
            "4.746875, 4.746875, 4.745312, 4.779687, 4.896875, 5.075000"
          );
        }
      }
    }
  }
}