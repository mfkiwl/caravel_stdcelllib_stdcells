library (ls05_stdcells) {
  capacitive_load_unit (1.0, pf);
  current_unit: "1uA";
  default_operating_conditions: typical;
  delay_model: table_lookup;
  in_place_swap_mode: match_footprint;
  input_threshold_pct_fall: 50.0;
  input_threshold_pct_rise: 50.0;
  leakage_power_unit: "1nW";
  nom_process: 1.0;
  nom_temperature: 25.0;
  nom_voltage: 5.0;
  output_threshold_pct_fall: 50.0;
  output_threshold_pct_rise: 50.0;
  pulling_resistance_unit: "1kohm";
  slew_lower_threshold_pct_fall: 20.0;
  slew_lower_threshold_pct_rise: 20.0;
  slew_upper_threshold_pct_fall: 80.0;
  slew_upper_threshold_pct_rise: 80.0;
  time_unit: "1ns";
  voltage_unit: "1V";
  operating_conditions (typical) {
    process: 1.0;
    temperature: 25.0;
    voltage: 5.0;
  }
  lu_table_template (delay_template_5x1) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    variable_1: input_net_transition;
  }
  lu_table_template (delay_template_5x5) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    variable_1: total_output_net_capacitance;
    variable_2: input_net_transition;
  }
  lu_table_template (delay_template_5x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: total_output_net_capacitance;
    variable_2: input_net_transition;
  }
  lu_table_template (delay_template_6x1) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: input_net_transition;
  }
  lu_table_template (delay_template_6x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: total_output_net_capacitance;
    variable_2: input_net_transition;
  }
  power_lut_template (energy_template_5x5) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    variable_1: total_output_net_capacitance;
    variable_2: input_transition_time;
  }
  power_lut_template (energy_template_5x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: total_output_net_capacitance;
    variable_2: input_transition_time;
  }
  power_lut_template (energy_template_6x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: total_output_net_capacitance;
    variable_2: input_transition_time;
  }
  lu_table_template (hold_template_3x5) {
    index_1 (
      "1000.0, 1001.0, 1002.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    variable_1: related_pin_transition;
    variable_2: constrained_pin_transition;
  }
  lu_table_template (hold_template_3x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: related_pin_transition;
    variable_2: constrained_pin_transition;
  }
  power_lut_template (passive_energy_template_5x1) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    variable_1: input_transition_time;
  }
  power_lut_template (passive_energy_template_6x1) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: input_transition_time;
  }
  lu_table_template (recovery_template_3x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: related_pin_transition;
    variable_2: constrained_pin_transition;
  }
  lu_table_template (recovery_template_6x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: related_pin_transition;
    variable_2: constrained_pin_transition;
  }
  lu_table_template (removal_template_3x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: related_pin_transition;
    variable_2: constrained_pin_transition;
  }
  lu_table_template (setup_template_3x5) {
    index_1 (
      "1000.0, 1001.0, 1002.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    variable_1: related_pin_transition;
    variable_2: constrained_pin_transition;
  }
  lu_table_template (setup_template_3x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: related_pin_transition;
    variable_2: constrained_pin_transition;
  }
  cell (MUX2X1) {
    area: 176640.0;
    cell_leakage_power: 0.1173;
    pin (S) {
      capacitance: 0.006332708533105211;
      direction: input;
      fall_capacitance: 0.006384963277670415;
      rise_capacitance: 0.006280453788540008;
    }
    pin (B) {
      capacitance: 0.0037454120268906343;
      direction: input;
      fall_capacitance: 0.003747521544193324;
      rise_capacitance: 0.0037433025095879443;
    }
    pin (A) {
      capacitance: 0.0037454110444847984;
      direction: input;
      fall_capacitance: 0.003747535135609587;
      rise_capacitance: 0.00374328695336001;
    }
    pin (Y) {
      direction: output;
      function: "!(!S&B&!A|!S&B&A|S&B&A|S&!B&A)";
      timing () {
        related_pin: "S";
        timing_sense: non_unate;
        cell_rise (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.198436, 0.238874, 0.325000, 0.464063, 0.525000, 0.578125", \
            "0.751817, 0.739619, 0.796875, 1.043750, 1.162500, 1.262500", \
            "1.500517, 1.465627, 1.475000, 1.656836, 1.798594, 1.940625", \
            "2.813218, 2.758776, 2.725000, 2.800000, 2.895312, 3.010937", \
            "3.752353, 3.693648, 3.639063, 3.659375, 3.725000, 3.818750", \
            "5.628995, 5.564444, 5.484375, 5.431250, 5.453125, 5.504687"
          );
        }
        cell_fall (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.119862, 0.143750, 0.154687, 0.148438, 0.143750, 0.131250", \
            "0.454929, 0.435938, 0.485937, 0.550000, 0.560938, 0.564063", \
            "0.908339, 0.868750, 0.867188, 1.003125, 1.046875, 1.070313", \
            "1.700598, 1.653125, 1.606250, 1.662656, 1.746875, 1.831250", \
            "2.274117, 2.210938, 2.153125, 2.148437, 2.210469, 2.295117", \
            "3.403782, 3.351562, 3.270312, 3.175000, 3.195313, 3.240625"
          );
        }
        rise_transition (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.301047, 0.338530, 0.480469, 0.989063, 1.300000, 1.620313", \
            "1.120312, 1.120106, 1.159375, 1.468594, 1.687500, 1.934375", \
            "2.210938, 2.212500, 2.212695, 2.381250, 2.545312, 2.726562", \
            "4.121875, 4.121875, 4.121875, 4.146875, 4.232813, 4.357812", \
            "5.487500, 5.487500, 5.487500, 5.487500, 5.520312, 5.600000", \
            "8.218750, 8.218750, 8.218750, 8.218750, 8.218750, 8.228125"
          );
        }
        fall_transition (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.176458, 0.285586, 0.559375, 1.195313, 1.535938, 1.873438", \
            "0.646200, 0.662500, 0.823438, 1.507813, 1.900000, 2.271875", \
            "1.276563, 1.276250, 1.337500, 1.825000, 2.195469, 2.595313", \
            "2.381250, 2.381250, 2.384961, 2.650000, 2.907812, 3.201562", \
            "3.168750, 3.168750, 3.172031, 3.325000, 3.531250, 3.779687", \
            "4.746875, 4.746875, 4.745312, 4.779687, 4.896875, 5.075000"
          );
        }
      }
      timing () {
        related_pin: "B";
        timing_sense: negative_unate;
        cell_rise (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.217687, 0.277982, 0.418750, 0.703125, 0.846875, 0.975000", \
            "0.775983, 0.802602, 0.903125, 1.262500, 1.465625, 1.650000", \
            "1.529703, 1.534864, 1.606250, 1.896875, 2.091406, 2.296875", \
            "2.842297, 2.841552, 2.878125, 3.090625, 3.246875, 3.421875", \
            "3.780127, 3.776070, 3.803125, 3.975000, 4.109375, 4.268750", \
            "5.659301, 5.648043, 5.659375, 5.781250, 5.887500, 6.012500"
          );
        }
        cell_fall (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.131460, 0.150000, 0.132812, 0.012500, -0.062500, -0.146875", \
            "0.470449, 0.482812, 0.515625, 0.534375, 0.506250, 0.459375", \
            "0.926948, 0.932813, 0.951563, 1.045313, 1.071875, 1.071875", \
            "1.723953, 1.728125, 1.737500, 1.806250, 1.862500, 1.918750", \
            "2.292742, 2.293750, 2.303125, 2.359375, 2.401563, 2.459375", \
            "3.433406, 3.429687, 3.432812, 3.473437, 3.507813, 3.545313"
          );
        }
        rise_transition (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.300692, 0.322044, 0.426563, 0.856250, 1.093750, 1.331250", \
            "1.118750, 1.119531, 1.134375, 1.328125, 1.496875, 1.690625", \
            "2.212500, 2.209375, 2.211563, 2.278125, 2.375000, 2.496875", \
            "4.121875, 4.121875, 4.121875, 4.125000, 4.146875, 4.200000", \
            "5.487500, 5.487500, 5.487500, 5.487500, 5.490625, 5.509375", \
            "8.218750, 8.218750, 8.218750, 8.218750, 8.218750, 8.217187"
          );
        }
        fall_transition (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.175892, 0.251562, 0.471875, 1.009375, 1.293750, 1.571875", \
            "0.646516, 0.650000, 0.750000, 1.296875, 1.609375, 1.915625", \
            "1.278125, 1.275781, 1.300000, 1.634375, 1.928125, 2.259375", \
            "2.381250, 2.381250, 2.380938, 2.506250, 2.678125, 2.900000", \
            "3.168750, 3.168750, 3.171875, 3.221875, 3.337500, 3.503125", \
            "4.746875, 4.746875, 4.746875, 4.750000, 4.787500, 4.875000"
          );
        }
      }
      timing () {
        related_pin: "A";
        timing_sense: negative_unate;
        cell_rise (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.216964, 0.280729, 0.418750, 0.703125, 0.846875, 0.975000", \
            "0.776049, 0.805432, 0.903125, 1.262500, 1.465625, 1.650000", \
            "1.528769, 1.537712, 1.606250, 1.896875, 2.091406, 2.296875", \
            "2.841420, 2.841279, 2.878125, 3.090625, 3.246875, 3.421875", \
            "3.781554, 3.775800, 3.803125, 3.975000, 4.109375, 4.268750", \
            "5.659773, 5.650896, 5.659375, 5.781250, 5.887500, 6.012500"
          );
        }
        cell_fall (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.130585, 0.150000, 0.132812, 0.012500, -0.062500, -0.146875", \
            "0.469811, 0.482812, 0.515625, 0.534375, 0.506250, 0.459375", \
            "0.927005, 0.932813, 0.951563, 1.045313, 1.068750, 1.071875", \
            "1.722779, 1.725000, 1.737500, 1.806250, 1.862500, 1.918750", \
            "2.291202, 2.293750, 2.303125, 2.356250, 2.401563, 2.459375", \
            "3.431494, 3.429687, 3.432812, 3.473437, 3.507813, 3.545313"
          );
        }
        rise_transition (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.303365, 0.321666, 0.426563, 0.856250, 1.093750, 1.331250", \
            "1.118750, 1.119531, 1.134375, 1.331250, 1.496875, 1.690625", \
            "2.212500, 2.209375, 2.211563, 2.278125, 2.375000, 2.500000", \
            "4.121875, 4.121875, 4.121875, 4.125000, 4.146875, 4.203125", \
            "5.487500, 5.487500, 5.487500, 5.490625, 5.490625, 5.509375", \
            "8.218750, 8.218750, 8.218750, 8.218750, 8.218750, 8.217187"
          );
        }
        fall_transition (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.175130, 0.251562, 0.475000, 1.009375, 1.293750, 1.571875", \
            "0.646675, 0.650000, 0.750000, 1.296875, 1.606250, 1.915625", \
            "1.275000, 1.275781, 1.300000, 1.634375, 1.928125, 2.259375", \
            "2.381250, 2.381250, 2.380938, 2.506250, 2.678125, 2.896875", \
            "3.168750, 3.168750, 3.168750, 3.221875, 3.340625, 3.503125", \
            "4.746875, 4.746875, 4.746875, 4.750000, 4.787500, 4.875000"
          );
        }
      }
    }
  }
}