library (ls05_stdcells) {
  capacitive_load_unit (1.0, pf);
  current_unit: "1uA";
  default_operating_conditions: typical;
  delay_model: table_lookup;
  in_place_swap_mode: match_footprint;
  input_threshold_pct_fall: 50.0;
  input_threshold_pct_rise: 50.0;
  leakage_power_unit: "1nW";
  nom_process: 1.0;
  nom_temperature: 25.0;
  nom_voltage: 5.0;
  output_threshold_pct_fall: 50.0;
  output_threshold_pct_rise: 50.0;
  pulling_resistance_unit: "1kohm";
  slew_lower_threshold_pct_fall: 20.0;
  slew_lower_threshold_pct_rise: 20.0;
  slew_upper_threshold_pct_fall: 80.0;
  slew_upper_threshold_pct_rise: 80.0;
  time_unit: "1ns";
  voltage_unit: "1V";
  operating_conditions (typical) {
    process: 1.0;
    temperature: 25.0;
    voltage: 5.0;
  }
  lu_table_template (delay_template_5x1) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    variable_1: input_net_transition;
  }
  lu_table_template (delay_template_5x5) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    variable_1: total_output_net_capacitance;
    variable_2: input_net_transition;
  }
  lu_table_template (delay_template_5x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: total_output_net_capacitance;
    variable_2: input_net_transition;
  }
  lu_table_template (delay_template_6x1) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: input_net_transition;
  }
  lu_table_template (delay_template_6x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: total_output_net_capacitance;
    variable_2: input_net_transition;
  }
  power_lut_template (energy_template_5x5) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    variable_1: total_output_net_capacitance;
    variable_2: input_transition_time;
  }
  power_lut_template (energy_template_5x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: total_output_net_capacitance;
    variable_2: input_transition_time;
  }
  power_lut_template (energy_template_6x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: total_output_net_capacitance;
    variable_2: input_transition_time;
  }
  lu_table_template (hold_template_3x5) {
    index_1 (
      "1000.0, 1001.0, 1002.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    variable_1: related_pin_transition;
    variable_2: constrained_pin_transition;
  }
  lu_table_template (hold_template_3x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: related_pin_transition;
    variable_2: constrained_pin_transition;
  }
  power_lut_template (passive_energy_template_5x1) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    variable_1: input_transition_time;
  }
  power_lut_template (passive_energy_template_6x1) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: input_transition_time;
  }
  lu_table_template (recovery_template_3x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: related_pin_transition;
    variable_2: constrained_pin_transition;
  }
  lu_table_template (recovery_template_6x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: related_pin_transition;
    variable_2: constrained_pin_transition;
  }
  lu_table_template (removal_template_3x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: related_pin_transition;
    variable_2: constrained_pin_transition;
  }
  lu_table_template (setup_template_3x5) {
    index_1 (
      "1000.0, 1001.0, 1002.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    variable_1: related_pin_transition;
    variable_2: constrained_pin_transition;
  }
  lu_table_template (setup_template_3x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: related_pin_transition;
    variable_2: constrained_pin_transition;
  }
  cell (HAX1) {
    area: 323840.0;
    cell_leakage_power: 0.1173;
    pin (B) {
      capacitance: 0.00529184758081528;
      direction: input;
      fall_capacitance: 0.005187872293809992;
      rise_capacitance: 0.005395822867820569;
    }
    pin (A) {
      capacitance: 0.006626409272161467;
      direction: input;
      fall_capacitance: 0.006624636281745469;
      rise_capacitance: 0.006628182262577466;
    }
    pin (YS) {
      direction: output;
      function: "!(!B&!A|B&A)";
      timing () {
        related_pin: "B";
        timing_sense: non_unate;
        cell_rise (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.132165, 0.157813, 0.170313, 0.151563, 0.139063, 0.118750", \
            "0.436765, 0.423105, 0.443750, 0.473438, 0.470313, 0.460938", \
            "0.860044, 0.818903, 0.805876, 0.860938, 0.884375, 0.887500", \
            "1.606337, 1.548384, 1.489862, 1.490625, 1.518750, 1.551563", \
            "2.139465, 2.075251, 1.999237, 1.948437, 1.968750, 1.996875", \
            "3.208582, 3.138050, 3.035175, 2.912500, 2.896875, 2.904688"
          );
        }
        cell_fall (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.099846, 0.142188, 0.189063, 0.270313, 0.317188, 0.356250", \
            "0.252514, 0.278438, 0.339062, 0.435938, 0.485938, 0.532813", \
            "0.463595, 0.482812, 0.530469, 0.648438, 0.701563, 0.746875", \
            "0.843298, 0.854688, 0.879687, 1.009375, 1.073438, 1.125000", \
            "1.111709, 1.123438, 1.137500, 1.253711, 1.326563, 1.389063", \
            "1.652147, 1.660938, 1.668750, 1.741719, 1.813203, 1.884375"
          );
        }
        rise_transition (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.182179, 0.236749, 0.371875, 0.842188, 1.125000, 1.410938", \
            "0.690844, 0.700899, 0.778918, 1.092188, 1.314063, 1.553125", \
            "1.376563, 1.378214, 1.416423, 1.640625, 1.801406, 1.985938", \
            "2.576563, 2.576797, 2.585174, 2.729687, 2.848437, 2.982891", \
            "3.434375, 3.434375, 3.437519, 3.540625, 3.642187, 3.757812", \
            "5.150000, 5.148438, 5.146719, 5.193750, 5.267188, 5.360938"
          );
        }
        fall_transition (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.125132, 0.234180, 0.453125, 0.959375, 1.240625, 1.528125", \
            "0.417591, 0.459375, 0.621016, 1.153125, 1.440625, 1.723438", \
            "0.831714, 0.843750, 0.931250, 1.378125, 1.665625, 1.965625", \
            "1.558817, 1.560938, 1.595313, 1.871875, 2.109375, 2.377656", \
            "2.078125, 2.079531, 2.100000, 2.293750, 2.485937, 2.718750", \
            "3.118750, 3.117422, 3.123438, 3.240625, 3.356250, 3.515625"
          );
        }
      }
      timing () {
        related_pin: "A";
        timing_sense: non_unate;
        cell_rise (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.136665, 0.167188, 0.201563, 0.251563, 0.275000, 0.293750", \
            "0.440670, 0.433961, 0.451562, 0.520313, 0.553125, 0.579688", \
            "0.863835, 0.832033, 0.816318, 0.860938, 0.901563, 0.934375", \
            "1.610176, 1.561822, 1.507023, 1.493750, 1.512500, 1.540625", \
            "2.143520, 2.089944, 2.019523, 1.962500, 1.970312, 1.987500", \
            "3.212663, 3.152442, 3.061712, 2.940625, 2.917187, 2.914063"
          );
        }
        cell_fall (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.103040, 0.140625, 0.162500, 0.184375, 0.195313, 0.200000", \
            "0.257583, 0.282813, 0.328125, 0.360938, 0.376563, 0.382813", \
            "0.471484, 0.492187, 0.532031, 0.598438, 0.615625, 0.625000", \
            "0.848565, 0.864063, 0.887500, 0.989063, 1.025000, 1.046875", \
            "1.117406, 1.134375, 1.148438, 1.242188, 1.295313, 1.332813", \
            "1.657502, 1.673438, 1.681250, 1.742031, 1.800078, 1.854688"
          );
        }
        rise_transition (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.183259, 0.227612, 0.321875, 0.581250, 0.737500, 0.901563", \
            "0.692021, 0.698083, 0.749204, 0.957813, 1.089063, 1.231250", \
            "1.376563, 1.377114, 1.396083, 1.545313, 1.656836, 1.775000", \
            "2.576563, 2.577266, 2.582023, 2.650000, 2.726562, 2.819609", \
            "3.434375, 3.434375, 3.435305, 3.478125, 3.532812, 3.603125", \
            "5.148437, 5.146875, 5.149219, 5.168750, 5.198438, 5.242188"
          );
        }
        fall_transition (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.121343, 0.193945, 0.328125, 0.625000, 0.798438, 0.976563", \
            "0.418646, 0.443750, 0.545156, 0.873438, 1.042188, 1.204688", \
            "0.832065, 0.839063, 0.900000, 1.173438, 1.353125, 1.534375", \
            "1.558155, 1.560938, 1.587500, 1.775000, 1.918750, 2.080156", \
            "2.078125, 2.079102, 2.098438, 2.248437, 2.367187, 2.504687", \
            "3.117188, 3.117813, 3.123438, 3.231250, 3.325000, 3.431250"
          );
        }
      }
    }
    pin (YC) {
      direction: output;
      function: "(B&A)";
      timing () {
        related_pin: "B";
        timing_sense: positive_unate;
        cell_rise (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.127244, 0.162500, 0.193750, 0.203125, 0.203125, 0.196875", \
            "0.429140, 0.419404, 0.490625, 0.593750, 0.615625, 0.628125", \
            "0.851901, 0.803932, 0.826092, 1.015625, 1.078125, 1.115625", \
            "1.597439, 1.522767, 1.477420, 1.597031, 1.712500, 1.825000", \
            "2.131188, 2.047794, 1.971308, 2.025000, 2.116719, 2.231250", \
            "3.201157, 3.104071, 2.993186, 2.937500, 2.984375, 3.062500"
          );
        }
        cell_fall (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.078860, 0.115625, 0.153125, 0.221875, 0.256250, 0.284375", \
            "0.230404, 0.251563, 0.306250, 0.390625, 0.434375, 0.475000", \
            "0.446286, 0.450000, 0.496875, 0.603125, 0.650000, 0.690625", \
            "0.824103, 0.812500, 0.825000, 0.962500, 1.018750, 1.065625", \
            "1.092772, 1.081250, 1.075000, 1.196875, 1.271875, 1.328125", \
            "1.633353, 1.618750, 1.596875, 1.653125, 1.734375, 1.821875"
          );
        }
        rise_transition (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.182318, 0.274195, 0.528125, 1.334375, 1.784375, 2.234375", \
            "0.690085, 0.716279, 0.862500, 1.418750, 1.821875, 2.256250", \
            "1.376667, 1.378932, 1.469842, 1.878125, 2.157422, 2.475000", \
            "2.578125, 2.575000, 2.599295, 2.909375, 3.131250, 3.365625", \
            "3.434375, 3.434375, 3.436933, 3.684375, 3.884375, 4.100000", \
            "5.150000, 5.146875, 5.150000, 5.275000, 5.437500, 5.628125"
          );
        }
        fall_transition (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.127756, 0.300000, 0.625000, 1.390625, 1.825000, 2.262500", \
            "0.419798, 0.500000, 0.779297, 1.609375, 2.046875, 2.481250", \
            "0.833236, 0.862500, 1.056250, 1.815625, 2.284375, 2.740625", \
            "1.559805, 1.565625, 1.653125, 2.240625, 2.652812, 3.100000", \
            "2.078059, 2.078125, 2.134375, 2.609375, 2.981250, 3.390625", \
            "3.118750, 3.117188, 3.137500, 3.434375, 3.734375, 4.081250"
          );
        }
      }
      timing () {
        related_pin: "A";
        timing_sense: positive_unate;
        cell_rise (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.131933, 0.165625, 0.175000, 0.125000, 0.093750, 0.056250", \
            "0.438693, 0.432901, 0.493750, 0.534375, 0.521875, 0.500000", \
            "0.863577, 0.826397, 0.840625, 0.993750, 1.021875, 1.025000", \
            "1.610408, 1.552123, 1.512500, 1.605469, 1.703125, 1.793750", \
            "2.144788, 2.077329, 2.012500, 2.050000, 2.128125, 2.225000", \
            "3.213346, 3.140035, 3.043750, 2.987500, 3.025000, 3.090625"
          );
        }
        cell_fall (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.084890, 0.131250, 0.190625, 0.318750, 0.384375, 0.446875", \
            "0.237294, 0.261563, 0.321875, 0.468750, 0.546875, 0.621875", \
            "0.450425, 0.456250, 0.500000, 0.634375, 0.715625, 0.793750", \
            "0.827791, 0.825000, 0.834375, 0.953125, 1.021875, 1.093750", \
            "1.096468, 1.090625, 1.087500, 1.184375, 1.250000, 1.315625", \
            "1.637196, 1.628125, 1.609375, 1.653125, 1.715625, 1.781250"
          );
        }
        rise_transition (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.181492, 0.251244, 0.481250, 1.250000, 1.678125, 2.109375", \
            "0.688262, 0.711026, 0.834375, 1.337500, 1.725000, 2.140625", \
            "1.375000, 1.379522, 1.453125, 1.821875, 2.068750, 2.365625", \
            "2.578125, 2.575000, 2.590625, 2.871875, 3.075000, 3.293750", \
            "3.434375, 3.434375, 3.437500, 3.650000, 3.837500, 4.037500", \
            "5.150000, 5.150000, 5.146875, 5.250000, 5.396875, 5.571875"
          );
        }
        fall_transition (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.133136, 0.303125, 0.625000, 1.406250, 1.834375, 2.262500", \
            "0.421491, 0.503125, 0.776172, 1.556250, 1.984375, 2.418750", \
            "0.834348, 0.859375, 1.043750, 1.765625, 2.193750, 2.625000", \
            "1.560388, 1.562500, 1.637500, 2.200000, 2.591016, 3.003125", \
            "2.077277, 2.078125, 2.118750, 2.562500, 2.918750, 3.303594", \
            "3.115625, 3.115313, 3.128125, 3.378125, 3.665625, 3.993750"
          );
        }
      }
    }
  }
}